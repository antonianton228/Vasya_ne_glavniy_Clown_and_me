# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'new_furniture_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow, QLabel, QWidget, QVBoxLayout, QApplication, QDialog
from PyQt5.QtCore import Qt, QPoint, QObject
from PyQt5.QtGui import QPen, QPainter, QImage, QPixmap




class NewFurnitureClass(QDialog):
    def __init__(self):
        super().__init__()
        self.setupUi()

    def setupUi(self):
        Form = self
        Form.setObjectName("Form")
        Form.resize(739, 626)
        Form.setStyleSheet("background: rgb(118, 118, 118)")


        self.drawing = False
        self.brushSize = 2
        self.brushColor = Qt.white
        self.lastPoint = QPoint()

        self.gridLayout = QtWidgets.QGridLayout(Form)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.furniture_plan = QtWidgets.QLabel(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.furniture_plan.sizePolicy().hasHeightForWidth())
        self.furniture_plan.setSizePolicy(sizePolicy)
        self.furniture_plan.setMinimumSize(QtCore.QSize(600, 0))
        self.furniture_plan.setStyleSheet("background: rgb(0, 0, 0)")
        self.furniture_plan.setText("")
        self.furniture_plan.setObjectName("furniture_plan")
        self.furniture_plan.setMouseTracking(True)
        self.horizontalLayout_2.addWidget(self.furniture_plan)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.verticalLayout.setObjectName("verticalLayout")
        self.rendo_button = QtWidgets.QPushButton(Form)
        self.rendo_button.setStyleSheet("QPushButton {\n"
"  background: rgb(255, 0, 0);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"  background: rgb(38, 132, 255)\n"
"}")
        self.rendo_button.setObjectName("rendo_button")
        self.verticalLayout.addWidget(self.rendo_button)
        self.undo_button = QtWidgets.QPushButton(Form)
        self.undo_button.setStyleSheet("QPushButton {\n"
"  background: rgb(255, 0, 0);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"  background: rgb(38, 132, 255)\n"
"}")
        self.undo_button.setObjectName("undo_button")
        self.verticalLayout.addWidget(self.undo_button)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.color_button = QtWidgets.QPushButton(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.color_button.sizePolicy().hasHeightForWidth())
        self.color_button.setSizePolicy(sizePolicy)
        self.color_button.setStyleSheet("QPushButton {\n"
"  background: rgb(255, 0, 0);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"  background: rgb(38, 132, 255)\n"
"}")
        self.color_button.setObjectName("color_button")
        self.verticalLayout_2.addWidget(self.color_button)
        self.verticalLayout.addLayout(self.verticalLayout_2)
        self.horizontalLayout_2.addLayout(self.verticalLayout)
        self.gridLayout.addLayout(self.horizontalLayout_2, 0, 0, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.apply_button = QtWidgets.QPushButton(Form)
        self.apply_button.setStyleSheet("QPushButton {\n"
"  background: rgb(255, 0, 0);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"  background: rgb(255, 255, 0);\n"
"}")
        self.apply_button.setObjectName("apply_button")
        self.horizontalLayout.addWidget(self.apply_button)
        self.exit_button = QtWidgets.QPushButton(Form)
        self.exit_button.setStyleSheet("QPushButton {\n"
"  background: rgb(255, 0, 0);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"  background: rgb(255, 255, 0);\n"
"}")
        self.exit_button.setObjectName("exit_button")
        self.horizontalLayout.addWidget(self.exit_button)
        self.gridLayout.addLayout(self.horizontalLayout, 1, 0, 1, 1)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.rendo_button.setText(_translate("Form", "Вперёд"))
        self.undo_button.setText(_translate("Form", "Назад"))
        self.color_button.setText(_translate("Form", "Цвет"))
        self.apply_button.setText(_translate("Form", "Применить"))
        self.exit_button.setText(_translate("Form", "Выйти"))
        print(111)

    # def mousePressEvent(self, event):
    #     if event.button() == Qt.LeftButton:
    #         self.drawing = True
    #         self.lastPoint = event.pos()
    #
    #
    # def mouseMoveEvent(self, event):
    #     print(11111)
    #     if (event.buttons() & Qt.LeftButton) & self.drawing:
    #         painter = QPainter(self.image)
    #         painter.setPen(QPen(self.brushColor, self.brushSize,
    #                             Qt.SolidLine, Qt.RoundCap, Qt.RoundJoin))
    #         painter.drawLine(self.lastPoint, event.pos())
    #         self.lastPoint = event.pos()
    #         self.update()
    #
    # def mouseReleaseEvent(self, event):
    #     if event.button() == Qt.LeftButton:
    #         self.drawing = False
    #
    # def paintEvent(self, event):
    #     canvasPainter = QPainter(self)
    #     canvasPainter.drawImage(self.rect(), self.image, self.image.rect())
